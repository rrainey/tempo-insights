# ===================================
# DOCKER ENVIRONMENT CONFIGURATION
# ===================================
# This file contains Docker-specific environment variables
# Service names reference Docker container names on the tempo-network

# ===================================
# SECRETS AND KEYS
# ===================================
# CRITICAL: Change all secrets before production deployment!
# Generate secure secrets using: openssl rand -base64 32

# JWT Secret for authentication (minimum 32 characters)
JWT_SECRET=super-secret-jwt-token-with-at-least-32-characters-long

# Supabase JWT keys (generate using Supabase JWT generator tool)
# https://supabase.com/docs/guides/auth/jwt
ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxvY2FsaG9zdCIsInJvbGUiOiJhbm9uIiwiaWF0IjoxNjQxNzY5MjAwLCJleHAiOjE5NTczNDUyMDB9.dc6hdqVKOKtY7zT3aDTxVvHJRmFNfKTHpzVpGXNLQ_o
SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxvY2FsaG9zdCIsInJvbGUiOiJzZXJ2aWNlX3JvbGUiLCJpYXQiOjE2NDE3NjkyMDAsImV4cCI6MTk1NzM0NTIwMH0.qwQK7rGfUJqVZ-fzLqhK7MdWoGV2ajTvzFbYX8oT1IU
SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxvY2FsaG9zdCIsInJvbGUiOiJzZXJ2aWNlX3JvbGUiLCJpYXQiOjE2NDE3NjkyMDAsImV4cCI6MTk1NzM0NTIwMH0.qwQK7rGfUJqVZ-fzLqhK7MdWoGV2ajTvzFbYX8oT1IU

# Worker tokens for internal API access (generate unique token)
WORKER_TOKEN=docker-worker-token-change-this-in-production-minimum-64-chars

# ===================================
# DATABASE CONFIGURATION (Supabase)
# ===================================
# Direct PostgreSQL connection (port 5432)
# Note: Use 'db' as hostname - resolves to Supabase PostgreSQL container
DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres

# Pooled connection via Supavisor (recommended for production)
# DATABASE_URL=postgresql://postgres:postgres@db:6543/postgres

# ===================================
# SUPABASE CONFIGURATION
# ===================================
# Supabase API URL - Kong gateway routes all requests
# Use 'host.docker.internal' from containers or actual Pi IP from external clients
NEXT_PUBLIC_SUPABASE_URL=http://localhost:8000

# Supabase Storage bucket for jump logs
JUMP_LOG_STORAGE_BUCKET=jump-logs
JUMP_LOG_MAX_SIZE_MB=128

# ===================================
# NEXT.JS WEB SERVER
# ===================================
# External URL for the application
# Replace 'localhost' with your Raspberry Pi's hostname or IP
NEXTAUTH_URL=http://localhost:3000

# Next.js environment
NODE_ENV=production

# ===================================
# BLUETOOTH SCANNER SERVICE
# ===================================
# Discovery window in seconds (default: 300 = 5 minutes)
DISCOVERY_WINDOW=300

# Path to smpmgr plugin directory inside container
SMPMGR_PLUGIN_PATH=/opt/smpmgr-extensions/plugins

# Bluetooth service runs with host networking for HCI socket access
# No separate hostname needed - shares host network stack

# ===================================
# ANALYSIS WORKER SERVICE
# ===================================
# Analysis worker runs on tempo-network
# Uses DATABASE_URL above for database access
# No additional configuration needed

# ===================================
# DOCKER NETWORK CONFIGURATION
# ===================================
# All services connect via Docker network: tempo-network
# Service hostnames:
#   - db (Supabase PostgreSQL)
#   - tempo-web (Next.js application)
#   - tempo-bt-scanner (Bluetooth scanner - uses host network)
#   - tempo-analysis (Analysis worker)

# ===================================
# PORTS EXPOSED TO HOST
# ===================================
# Port 3000: Next.js web application
# Port 8000: Supabase Kong API gateway (all Supabase APIs)
# Port 8443: Supabase Kong HTTPS (if SSL configured)
# Port 6543: Supabase Supavisor connection pooler
# Port 54322: Direct PostgreSQL access (optional, for debugging)

# ===================================
# VOLUME MOUNT PATHS
# ===================================
# These paths are used in docker-compose.yml
# Supabase volumes: ./supabase/volumes/
# Application data: Docker named volumes

# ===================================
# PRODUCTION DEPLOYMENT NOTES
# ===================================
# Before deploying to production:
# 1. Generate new JWT_SECRET: openssl rand -base64 32
# 2. Generate new WORKER_TOKEN: openssl rand -base64 48
# 3. Generate Supabase JWT keys: https://supabase.com/docs/guides/auth/jwt
# 4. Change default PostgreSQL password in supabase/.env
# 5. Update NEXTAUTH_URL to your domain/IP
# 6. Update NEXT_PUBLIC_SUPABASE_URL to your domain/IP
# 7. Configure firewall rules for exposed ports
# 8. Set up SSL/TLS certificates if using HTTPS
# 9. Review and restrict database access
# 10. Enable Docker restart policies